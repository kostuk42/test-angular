{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { moveItemInArray } from '@angular/cdk/drag-drop';\nimport { take } from \"rxjs\";\nimport { EventModalComponent } from \"../event-modal/event-modal.component\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/calendar.service\";\nimport * as i2 from \"@angular/material/dialog\";\nimport * as i3 from \"@angular/cdk/drag-drop\";\nimport * as i4 from \"@angular/common\";\n\nfunction SchedulerComponent_li_4_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 6)(1, \"button\", 7);\n    i0.ɵɵlistener(\"click\", function SchedulerComponent_li_4_div_5_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const event_r1 = i0.ɵɵnextContext().$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.onEdit(event_r1);\n    });\n    i0.ɵɵtext(2, \"Edit\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function SchedulerComponent_li_4_div_5_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const event_r1 = i0.ɵɵnextContext().$implicit;\n      const ctx_r7 = i0.ɵɵnextContext();\n      return ctx_r7.onDelete(event_r1);\n    });\n    i0.ɵɵtext(4, \"Delete\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction SchedulerComponent_li_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 2)(1, \"div\", 3);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 4);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(5, SchedulerComponent_li_4_div_5_Template, 5, 0, \"div\", 5);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const event_r1 = ctx.$implicit;\n    const i_r2 = ctx.index;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.hours[i_r2].name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(event_r1 ? event_r1.name : \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", event_r1);\n  }\n}\n\nexport let SchedulerComponent = /*#__PURE__*/(() => {\n  class SchedulerComponent {\n    constructor(calendarService, dialog) {\n      this.calendarService = calendarService;\n      this.dialog = dialog;\n      this.hours = [];\n      this.events = [];\n      this.sub = null;\n      this.schedulingDate = new Date();\n      this.eventsChanged = new EventEmitter();\n    }\n\n    ngOnInit() {\n      this.updateEvents();\n\n      if (!this.sub) {\n        this.calendarService.updateEvents$.subscribe(() => this.updateEvents());\n      }\n    }\n\n    onEdit(event) {\n      let hours = event.time.getHours();\n      let minutes = event.time.getMinutes();\n\n      if (hours < 10) {\n        hours = '0' + hours;\n      }\n\n      if (minutes < 9) {\n        minutes = '0' + minutes;\n      }\n\n      this.dialog.open(EventModalComponent, {\n        data: {\n          date: event.time,\n          time: hours + ':' + minutes,\n          name: event.name,\n          id: event.id\n        }\n      }).afterClosed().pipe(take(1)).subscribe(event => {\n        if (event) {\n          this.calendarService.totalEvents = this.calendarService.totalEvents.map(e => e.id === event.id ? event : e);\n          this.calendarService.updateEvents$.next(null);\n        }\n      });\n    }\n\n    onDelete(event) {\n      this.calendarService.totalEvents = this.calendarService.totalEvents.filter(e => e.id !== event.id);\n      this.calendarService.updateEvents$.next(null);\n    }\n\n    updateEvents() {\n      if (!this.hours.length) {\n        for (let h = 0; h < 24; h += 1) {\n          this.hours.push({\n            name: h + ' h'\n          });\n          this.events.push(null);\n        }\n      }\n\n      this.events.fill(null);\n      const dayStart = new Date(this.schedulingDate).setHours(0);\n      const dayEnd = new Date(this.schedulingDate).setHours(23, 59, 59, 999);\n      const todayEvents = this.calendarService.totalEvents.filter(e => {\n        return e.time >= dayStart && e.time.getTime() <= dayEnd;\n      });\n      todayEvents.forEach(e => {\n        let index = e.time.getHours();\n        this.events[index] = e;\n      });\n    }\n\n    ngOnChanges() {\n      this.updateEvents();\n    }\n\n    drop(e) {\n      moveItemInArray(this.events, e.previousIndex, e.currentIndex);\n      let currentEvent = this.events[e.currentIndex];\n\n      if (currentEvent) {\n        currentEvent.time = this.getChangedTime(e.currentIndex);\n        this.events[e.currentIndex].time = currentEvent.time;\n        const existingEvents = this.events.filter(e => !!e);\n        this.eventsChanged.emit(existingEvents);\n      }\n    }\n\n    ngOnDestroy() {\n      this.sub.unsubscribe();\n    }\n\n    getChangedTime(index) {\n      const eventTime = this.events[index].time;\n      eventTime.setHours(index);\n      eventTime.setMinutes(0);\n      return eventTime;\n    }\n\n  }\n\n  SchedulerComponent.ɵfac = function SchedulerComponent_Factory(t) {\n    return new (t || SchedulerComponent)(i0.ɵɵdirectiveInject(i1.CalendarService), i0.ɵɵdirectiveInject(i2.MatDialog));\n  };\n\n  SchedulerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SchedulerComponent,\n    selectors: [[\"app-scheduler\"]],\n    inputs: {\n      schedulingDate: \"schedulingDate\"\n    },\n    outputs: {\n      eventsChanged: \"eventsChanged\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature],\n    decls: 5,\n    vars: 4,\n    consts: [[\"cdkDropList\", \"\", 1, \"example-list\", 3, \"cdkDropListDropped\"], [\"class\", \"example-box\", \"cdkDrag\", \"\", \"cdkDragLockAxis\", \"y\", 4, \"ngFor\", \"ngForOf\"], [\"cdkDrag\", \"\", \"cdkDragLockAxis\", \"y\", 1, \"example-box\"], [1, \"time-range\"], [1, \"event-name\"], [\"class\", \"buttons\", 4, \"ngIf\"], [1, \"buttons\"], [1, \"edit\", 3, \"click\"], [1, \"delete\", 3, \"click\"]],\n    template: function SchedulerComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\");\n        i0.ɵɵtext(1);\n        i0.ɵɵpipe(2, \"date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"ul\", 0);\n        i0.ɵɵlistener(\"cdkDropListDropped\", function SchedulerComponent_Template_ul_cdkDropListDropped_3_listener($event) {\n          return ctx.drop($event);\n        });\n        i0.ɵɵtemplate(4, SchedulerComponent_li_4_Template, 6, 3, \"li\", 1);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 2, ctx.schedulingDate));\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.events);\n      }\n    },\n    directives: [i3.CdkDropList, i4.NgForOf, i3.CdkDrag, i4.NgIf],\n    pipes: [i4.DatePipe],\n    styles: [\".example-list[_ngcontent-%COMP%]{max-width:100%;border:solid 1px #ccc;min-height:60px;display:block;background:white;border-radius:4px;overflow:hidden}.example-box[_ngcontent-%COMP%]{padding:10px 5px;border-bottom:solid 1px #ccc;color:#000000de;display:flex;justify-content:space-between;box-sizing:border-box;cursor:move;background:white;font-size:14px}.cdk-drag-preview[_ngcontent-%COMP%]{box-sizing:border-box;border-radius:4px;box-shadow:0 5px 5px -3px #0003,0 8px 10px 1px #00000024,0 3px 14px 2px #0000001f}.cdk-drag-placeholder[_ngcontent-%COMP%]{opacity:0}.cdk-drag-animating[_ngcontent-%COMP%]{transition:transform .25s cubic-bezier(0,0,.2,1)}.example-box[_ngcontent-%COMP%]:last-child{border:none}.example-list.cdk-drop-list-dragging[_ngcontent-%COMP%]   .example-box[_ngcontent-%COMP%]:not(.cdk-drag-placeholder){transition:transform .25s cubic-bezier(0,0,.2,1)}.time-range[_ngcontent-%COMP%]{width:20%}.mat-calendar-body-cell.highlight[_ngcontent-%COMP%] > .mat-calendar-body-cell-content[_ngcontent-%COMP%], .mat-calendar-body-cell.highlight[_ngcontent-%COMP%]:hover > .mat-calendar-body-cell-content[_ngcontent-%COMP%], .mat-calendar-body-cell.highlight[_ngcontent-%COMP%] > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:hover{border-color:#ab4545!important;color:#ab4545!important}button[_ngcontent-%COMP%]{margin-left:10px;border:0;border-radius:4px;color:#fff;padding-right:3px;padding-left:3px}.edit[_ngcontent-%COMP%]{background-color:green}.delete[_ngcontent-%COMP%]{background-color:red;margin-right:10px}\"]\n  });\n  return SchedulerComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}